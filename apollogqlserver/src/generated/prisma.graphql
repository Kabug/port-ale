# source: http://localhost:4466
# timestamp: Fri Feb 21 2020 16:40:11 GMT-0800 (Pacific Standard Time)

type AggregateItamProgress {
  count: Int!
}

type AggregateOrder {
  count: Int!
}

type AggregateTechProgress {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

type ItamProgress implements Node {
  id: ID!
  itamOrder(where: OrderWhereInput): Order!
  itamOwner(where: UserWhereInput): User!
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
}

"""A connection to a list of items."""
type ItamProgressConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ItamProgressEdge]!
  aggregate: AggregateItamProgress!
}

input ItamProgressCreateInput {
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
  itamOrder: OrderCreateOneWithoutOrderItamInput!
  itamOwner: UserCreateOneWithoutUserItamOrdersInput!
}

input ItamProgressCreateManyWithoutItamOwnerInput {
  create: [ItamProgressCreateWithoutItamOwnerInput!]
  connect: [ItamProgressWhereUniqueInput!]
}

input ItamProgressCreateOneWithoutItamOrderInput {
  create: ItamProgressCreateWithoutItamOrderInput
  connect: ItamProgressWhereUniqueInput
}

input ItamProgressCreateWithoutItamOrderInput {
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
  itamOwner: UserCreateOneWithoutUserItamOrdersInput!
}

input ItamProgressCreateWithoutItamOwnerInput {
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
  itamOrder: OrderCreateOneWithoutOrderItamInput!
}

"""An edge in a connection."""
type ItamProgressEdge {
  """The item at the end of the edge."""
  node: ItamProgress!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ItamProgressOrderByInput {
  id_ASC
  id_DESC
  itamStatus_ASC
  itamStatus_DESC
  itamVerificationEmailSent_ASC
  itamVerificationEmailSent_DESC
  itamProductSource_ASC
  itamProductSource_DESC
  itamOldAssetTag_ASC
  itamOldAssetTag_DESC
  itamOldModel_ASC
  itamOldModel_DESC
  itamMonitorModel_ASC
  itamMonitorModel_DESC
  itamMonitorNum_ASC
  itamMonitorNum_DESC
  itamConnectorTypes_ASC
  itamConnectorTypes_DESC
  itamOrderPendingEmail_ASC
  itamOrderPendingEmail_DESC
  itamConfirmedNewHire_ASC
  itamConfirmedNewHire_DESC
  itamPoOrderId_ASC
  itamPoOrderId_DESC
  itamDellOrderId_ASC
  itamDellOrderId_DESC
  itamDellEmailNotif_ASC
  itamDellEmailNotif_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ItamProgressPreviousValues {
  id: ID!
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
}

type ItamProgressSubscriptionPayload {
  mutation: MutationType!
  node: ItamProgress
  updatedFields: [String!]
  previousValues: ItamProgressPreviousValues
}

input ItamProgressSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ItamProgressSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItamProgressSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItamProgressSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ItamProgressWhereInput
}

input ItamProgressUpdateInput {
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
  itamOrder: OrderUpdateOneWithoutOrderItamInput
  itamOwner: UserUpdateOneWithoutUserItamOrdersInput
}

input ItamProgressUpdateManyWithoutItamOwnerInput {
  create: [ItamProgressCreateWithoutItamOwnerInput!]
  connect: [ItamProgressWhereUniqueInput!]
  disconnect: [ItamProgressWhereUniqueInput!]
  delete: [ItamProgressWhereUniqueInput!]
  update: [ItamProgressUpdateWithWhereUniqueWithoutItamOwnerInput!]
  upsert: [ItamProgressUpsertWithWhereUniqueWithoutItamOwnerInput!]
}

input ItamProgressUpdateOneWithoutItamOrderInput {
  create: ItamProgressCreateWithoutItamOrderInput
  connect: ItamProgressWhereUniqueInput
  delete: Boolean
  update: ItamProgressUpdateWithoutItamOrderDataInput
  upsert: ItamProgressUpsertWithoutItamOrderInput
}

input ItamProgressUpdateWithoutItamOrderDataInput {
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
  itamOwner: UserUpdateOneWithoutUserItamOrdersInput
}

input ItamProgressUpdateWithoutItamOwnerDataInput {
  itamStatus: String
  itamVerificationEmailSent: DateTime
  itamProductSource: String
  itamOldAssetTag: String
  itamOldModel: String
  itamMonitorModel: String
  itamMonitorNum: Float
  itamConnectorTypes: String
  itamOrderPendingEmail: DateTime
  itamConfirmedNewHire: DateTime
  itamPoOrderId: Float
  itamDellOrderId: Float
  itamDellEmailNotif: DateTime
  itamOrder: OrderUpdateOneWithoutOrderItamInput
}

input ItamProgressUpdateWithWhereUniqueWithoutItamOwnerInput {
  where: ItamProgressWhereUniqueInput!
  data: ItamProgressUpdateWithoutItamOwnerDataInput!
}

input ItamProgressUpsertWithoutItamOrderInput {
  update: ItamProgressUpdateWithoutItamOrderDataInput!
  create: ItamProgressCreateWithoutItamOrderInput!
}

input ItamProgressUpsertWithWhereUniqueWithoutItamOwnerInput {
  where: ItamProgressWhereUniqueInput!
  update: ItamProgressUpdateWithoutItamOwnerDataInput!
  create: ItamProgressCreateWithoutItamOwnerInput!
}

input ItamProgressWhereInput {
  """Logical AND on all given filters."""
  AND: [ItamProgressWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItamProgressWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItamProgressWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  itamStatus: String

  """All values that are not equal to given value."""
  itamStatus_not: String

  """All values that are contained in given list."""
  itamStatus_in: [String!]

  """All values that are not contained in given list."""
  itamStatus_not_in: [String!]

  """All values less than the given value."""
  itamStatus_lt: String

  """All values less than or equal the given value."""
  itamStatus_lte: String

  """All values greater than the given value."""
  itamStatus_gt: String

  """All values greater than or equal the given value."""
  itamStatus_gte: String

  """All values containing the given string."""
  itamStatus_contains: String

  """All values not containing the given string."""
  itamStatus_not_contains: String

  """All values starting with the given string."""
  itamStatus_starts_with: String

  """All values not starting with the given string."""
  itamStatus_not_starts_with: String

  """All values ending with the given string."""
  itamStatus_ends_with: String

  """All values not ending with the given string."""
  itamStatus_not_ends_with: String
  itamVerificationEmailSent: DateTime

  """All values that are not equal to given value."""
  itamVerificationEmailSent_not: DateTime

  """All values that are contained in given list."""
  itamVerificationEmailSent_in: [DateTime!]

  """All values that are not contained in given list."""
  itamVerificationEmailSent_not_in: [DateTime!]

  """All values less than the given value."""
  itamVerificationEmailSent_lt: DateTime

  """All values less than or equal the given value."""
  itamVerificationEmailSent_lte: DateTime

  """All values greater than the given value."""
  itamVerificationEmailSent_gt: DateTime

  """All values greater than or equal the given value."""
  itamVerificationEmailSent_gte: DateTime
  itamProductSource: String

  """All values that are not equal to given value."""
  itamProductSource_not: String

  """All values that are contained in given list."""
  itamProductSource_in: [String!]

  """All values that are not contained in given list."""
  itamProductSource_not_in: [String!]

  """All values less than the given value."""
  itamProductSource_lt: String

  """All values less than or equal the given value."""
  itamProductSource_lte: String

  """All values greater than the given value."""
  itamProductSource_gt: String

  """All values greater than or equal the given value."""
  itamProductSource_gte: String

  """All values containing the given string."""
  itamProductSource_contains: String

  """All values not containing the given string."""
  itamProductSource_not_contains: String

  """All values starting with the given string."""
  itamProductSource_starts_with: String

  """All values not starting with the given string."""
  itamProductSource_not_starts_with: String

  """All values ending with the given string."""
  itamProductSource_ends_with: String

  """All values not ending with the given string."""
  itamProductSource_not_ends_with: String
  itamOldAssetTag: String

  """All values that are not equal to given value."""
  itamOldAssetTag_not: String

  """All values that are contained in given list."""
  itamOldAssetTag_in: [String!]

  """All values that are not contained in given list."""
  itamOldAssetTag_not_in: [String!]

  """All values less than the given value."""
  itamOldAssetTag_lt: String

  """All values less than or equal the given value."""
  itamOldAssetTag_lte: String

  """All values greater than the given value."""
  itamOldAssetTag_gt: String

  """All values greater than or equal the given value."""
  itamOldAssetTag_gte: String

  """All values containing the given string."""
  itamOldAssetTag_contains: String

  """All values not containing the given string."""
  itamOldAssetTag_not_contains: String

  """All values starting with the given string."""
  itamOldAssetTag_starts_with: String

  """All values not starting with the given string."""
  itamOldAssetTag_not_starts_with: String

  """All values ending with the given string."""
  itamOldAssetTag_ends_with: String

  """All values not ending with the given string."""
  itamOldAssetTag_not_ends_with: String
  itamOldModel: String

  """All values that are not equal to given value."""
  itamOldModel_not: String

  """All values that are contained in given list."""
  itamOldModel_in: [String!]

  """All values that are not contained in given list."""
  itamOldModel_not_in: [String!]

  """All values less than the given value."""
  itamOldModel_lt: String

  """All values less than or equal the given value."""
  itamOldModel_lte: String

  """All values greater than the given value."""
  itamOldModel_gt: String

  """All values greater than or equal the given value."""
  itamOldModel_gte: String

  """All values containing the given string."""
  itamOldModel_contains: String

  """All values not containing the given string."""
  itamOldModel_not_contains: String

  """All values starting with the given string."""
  itamOldModel_starts_with: String

  """All values not starting with the given string."""
  itamOldModel_not_starts_with: String

  """All values ending with the given string."""
  itamOldModel_ends_with: String

  """All values not ending with the given string."""
  itamOldModel_not_ends_with: String
  itamMonitorModel: String

  """All values that are not equal to given value."""
  itamMonitorModel_not: String

  """All values that are contained in given list."""
  itamMonitorModel_in: [String!]

  """All values that are not contained in given list."""
  itamMonitorModel_not_in: [String!]

  """All values less than the given value."""
  itamMonitorModel_lt: String

  """All values less than or equal the given value."""
  itamMonitorModel_lte: String

  """All values greater than the given value."""
  itamMonitorModel_gt: String

  """All values greater than or equal the given value."""
  itamMonitorModel_gte: String

  """All values containing the given string."""
  itamMonitorModel_contains: String

  """All values not containing the given string."""
  itamMonitorModel_not_contains: String

  """All values starting with the given string."""
  itamMonitorModel_starts_with: String

  """All values not starting with the given string."""
  itamMonitorModel_not_starts_with: String

  """All values ending with the given string."""
  itamMonitorModel_ends_with: String

  """All values not ending with the given string."""
  itamMonitorModel_not_ends_with: String
  itamMonitorNum: Float

  """All values that are not equal to given value."""
  itamMonitorNum_not: Float

  """All values that are contained in given list."""
  itamMonitorNum_in: [Float!]

  """All values that are not contained in given list."""
  itamMonitorNum_not_in: [Float!]

  """All values less than the given value."""
  itamMonitorNum_lt: Float

  """All values less than or equal the given value."""
  itamMonitorNum_lte: Float

  """All values greater than the given value."""
  itamMonitorNum_gt: Float

  """All values greater than or equal the given value."""
  itamMonitorNum_gte: Float
  itamConnectorTypes: String

  """All values that are not equal to given value."""
  itamConnectorTypes_not: String

  """All values that are contained in given list."""
  itamConnectorTypes_in: [String!]

  """All values that are not contained in given list."""
  itamConnectorTypes_not_in: [String!]

  """All values less than the given value."""
  itamConnectorTypes_lt: String

  """All values less than or equal the given value."""
  itamConnectorTypes_lte: String

  """All values greater than the given value."""
  itamConnectorTypes_gt: String

  """All values greater than or equal the given value."""
  itamConnectorTypes_gte: String

  """All values containing the given string."""
  itamConnectorTypes_contains: String

  """All values not containing the given string."""
  itamConnectorTypes_not_contains: String

  """All values starting with the given string."""
  itamConnectorTypes_starts_with: String

  """All values not starting with the given string."""
  itamConnectorTypes_not_starts_with: String

  """All values ending with the given string."""
  itamConnectorTypes_ends_with: String

  """All values not ending with the given string."""
  itamConnectorTypes_not_ends_with: String
  itamOrderPendingEmail: DateTime

  """All values that are not equal to given value."""
  itamOrderPendingEmail_not: DateTime

  """All values that are contained in given list."""
  itamOrderPendingEmail_in: [DateTime!]

  """All values that are not contained in given list."""
  itamOrderPendingEmail_not_in: [DateTime!]

  """All values less than the given value."""
  itamOrderPendingEmail_lt: DateTime

  """All values less than or equal the given value."""
  itamOrderPendingEmail_lte: DateTime

  """All values greater than the given value."""
  itamOrderPendingEmail_gt: DateTime

  """All values greater than or equal the given value."""
  itamOrderPendingEmail_gte: DateTime
  itamConfirmedNewHire: DateTime

  """All values that are not equal to given value."""
  itamConfirmedNewHire_not: DateTime

  """All values that are contained in given list."""
  itamConfirmedNewHire_in: [DateTime!]

  """All values that are not contained in given list."""
  itamConfirmedNewHire_not_in: [DateTime!]

  """All values less than the given value."""
  itamConfirmedNewHire_lt: DateTime

  """All values less than or equal the given value."""
  itamConfirmedNewHire_lte: DateTime

  """All values greater than the given value."""
  itamConfirmedNewHire_gt: DateTime

  """All values greater than or equal the given value."""
  itamConfirmedNewHire_gte: DateTime
  itamPoOrderId: Float

  """All values that are not equal to given value."""
  itamPoOrderId_not: Float

  """All values that are contained in given list."""
  itamPoOrderId_in: [Float!]

  """All values that are not contained in given list."""
  itamPoOrderId_not_in: [Float!]

  """All values less than the given value."""
  itamPoOrderId_lt: Float

  """All values less than or equal the given value."""
  itamPoOrderId_lte: Float

  """All values greater than the given value."""
  itamPoOrderId_gt: Float

  """All values greater than or equal the given value."""
  itamPoOrderId_gte: Float
  itamDellOrderId: Float

  """All values that are not equal to given value."""
  itamDellOrderId_not: Float

  """All values that are contained in given list."""
  itamDellOrderId_in: [Float!]

  """All values that are not contained in given list."""
  itamDellOrderId_not_in: [Float!]

  """All values less than the given value."""
  itamDellOrderId_lt: Float

  """All values less than or equal the given value."""
  itamDellOrderId_lte: Float

  """All values greater than the given value."""
  itamDellOrderId_gt: Float

  """All values greater than or equal the given value."""
  itamDellOrderId_gte: Float
  itamDellEmailNotif: DateTime

  """All values that are not equal to given value."""
  itamDellEmailNotif_not: DateTime

  """All values that are contained in given list."""
  itamDellEmailNotif_in: [DateTime!]

  """All values that are not contained in given list."""
  itamDellEmailNotif_not_in: [DateTime!]

  """All values less than the given value."""
  itamDellEmailNotif_lt: DateTime

  """All values less than or equal the given value."""
  itamDellEmailNotif_lte: DateTime

  """All values greater than the given value."""
  itamDellEmailNotif_gt: DateTime

  """All values greater than or equal the given value."""
  itamDellEmailNotif_gte: DateTime
  itamOrder: OrderWhereInput
  itamOwner: UserWhereInput
}

input ItamProgressWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createOrder(data: OrderCreateInput!): Order!
  createItamProgress(data: ItamProgressCreateInput!): ItamProgress!
  createTechProgress(data: TechProgressCreateInput!): TechProgress!
  createUser(data: UserCreateInput!): User!
  updateOrder(data: OrderUpdateInput!, where: OrderWhereUniqueInput!): Order
  updateItamProgress(data: ItamProgressUpdateInput!, where: ItamProgressWhereUniqueInput!): ItamProgress
  updateTechProgress(data: TechProgressUpdateInput!, where: TechProgressWhereUniqueInput!): TechProgress
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteOrder(where: OrderWhereUniqueInput!): Order
  deleteItamProgress(where: ItamProgressWhereUniqueInput!): ItamProgress
  deleteTechProgress(where: TechProgressWhereUniqueInput!): TechProgress
  deleteUser(where: UserWhereUniqueInput!): User
  upsertOrder(where: OrderWhereUniqueInput!, create: OrderCreateInput!, update: OrderUpdateInput!): Order!
  upsertItamProgress(where: ItamProgressWhereUniqueInput!, create: ItamProgressCreateInput!, update: ItamProgressUpdateInput!): ItamProgress!
  upsertTechProgress(where: TechProgressWhereUniqueInput!, create: TechProgressCreateInput!, update: TechProgressUpdateInput!): TechProgress!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyOrders(data: OrderUpdateInput!, where: OrderWhereInput): BatchPayload!
  updateManyItamProgresses(data: ItamProgressUpdateInput!, where: ItamProgressWhereInput): BatchPayload!
  updateManyTechProgresses(data: TechProgressUpdateInput!, where: TechProgressWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  deleteManyOrders(where: OrderWhereInput): BatchPayload!
  deleteManyItamProgresses(where: ItamProgressWhereInput): BatchPayload!
  deleteManyTechProgresses(where: TechProgressWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Order implements Node {
  id: ID!
  orderSimplexId: Float!
  orderDateCreated: DateTime!
  orderDateApproved: DateTime!
  orderCreatedBy: String!
  orderCreatedByEmail: String!
  orderNewHire: Boolean
  orderRecipient: String!
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String!
  orderBusinessUnit: String!
  orderAttention: String!
  orderShippingAddress: String!
  orderItem: String!
  orderTotal: Float!
  orderComments: String!
  orderCategory: String!
  orderSla: Int
  orderItam(where: ItamProgressWhereInput): ItamProgress!
  orderTech(where: TechProgressWhereInput): TechProgress!
}

"""A connection to a list of items."""
type OrderConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [OrderEdge]!
  aggregate: AggregateOrder!
}

input OrderCreateInput {
  orderSimplexId: Float!
  orderDateCreated: DateTime!
  orderDateApproved: DateTime!
  orderCreatedBy: String!
  orderCreatedByEmail: String!
  orderNewHire: Boolean
  orderRecipient: String!
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String!
  orderBusinessUnit: String!
  orderAttention: String!
  orderShippingAddress: String!
  orderItem: String!
  orderTotal: Float!
  orderComments: String!
  orderCategory: String!
  orderSla: Int
  orderItam: ItamProgressCreateOneWithoutItamOrderInput!
  orderTech: TechProgressCreateOneWithoutTechOrderInput!
}

input OrderCreateOneWithoutOrderItamInput {
  create: OrderCreateWithoutOrderItamInput
  connect: OrderWhereUniqueInput
}

input OrderCreateOneWithoutOrderTechInput {
  create: OrderCreateWithoutOrderTechInput
  connect: OrderWhereUniqueInput
}

input OrderCreateWithoutOrderItamInput {
  orderSimplexId: Float!
  orderDateCreated: DateTime!
  orderDateApproved: DateTime!
  orderCreatedBy: String!
  orderCreatedByEmail: String!
  orderNewHire: Boolean
  orderRecipient: String!
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String!
  orderBusinessUnit: String!
  orderAttention: String!
  orderShippingAddress: String!
  orderItem: String!
  orderTotal: Float!
  orderComments: String!
  orderCategory: String!
  orderSla: Int
  orderTech: TechProgressCreateOneWithoutTechOrderInput!
}

input OrderCreateWithoutOrderTechInput {
  orderSimplexId: Float!
  orderDateCreated: DateTime!
  orderDateApproved: DateTime!
  orderCreatedBy: String!
  orderCreatedByEmail: String!
  orderNewHire: Boolean
  orderRecipient: String!
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String!
  orderBusinessUnit: String!
  orderAttention: String!
  orderShippingAddress: String!
  orderItem: String!
  orderTotal: Float!
  orderComments: String!
  orderCategory: String!
  orderSla: Int
  orderItam: ItamProgressCreateOneWithoutItamOrderInput!
}

"""An edge in a connection."""
type OrderEdge {
  """The item at the end of the edge."""
  node: Order!

  """A cursor for use in pagination."""
  cursor: String!
}

enum OrderOrderByInput {
  id_ASC
  id_DESC
  orderSimplexId_ASC
  orderSimplexId_DESC
  orderDateCreated_ASC
  orderDateCreated_DESC
  orderDateApproved_ASC
  orderDateApproved_DESC
  orderCreatedBy_ASC
  orderCreatedBy_DESC
  orderCreatedByEmail_ASC
  orderCreatedByEmail_DESC
  orderNewHire_ASC
  orderNewHire_DESC
  orderRecipient_ASC
  orderRecipient_DESC
  orderHireStartDate_ASC
  orderHireStartDate_DESC
  orderHireName_ASC
  orderHireName_DESC
  orderApprovalManager_ASC
  orderApprovalManager_DESC
  orderBusinessUnit_ASC
  orderBusinessUnit_DESC
  orderAttention_ASC
  orderAttention_DESC
  orderShippingAddress_ASC
  orderShippingAddress_DESC
  orderItem_ASC
  orderItem_DESC
  orderTotal_ASC
  orderTotal_DESC
  orderComments_ASC
  orderComments_DESC
  orderCategory_ASC
  orderCategory_DESC
  orderSla_ASC
  orderSla_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type OrderPreviousValues {
  id: ID!
  orderSimplexId: Float!
  orderDateCreated: DateTime!
  orderDateApproved: DateTime!
  orderCreatedBy: String!
  orderCreatedByEmail: String!
  orderNewHire: Boolean
  orderRecipient: String!
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String!
  orderBusinessUnit: String!
  orderAttention: String!
  orderShippingAddress: String!
  orderItem: String!
  orderTotal: Float!
  orderComments: String!
  orderCategory: String!
  orderSla: Int
}

type OrderSubscriptionPayload {
  mutation: MutationType!
  node: Order
  updatedFields: [String!]
  previousValues: OrderPreviousValues
}

input OrderSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [OrderSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: OrderWhereInput
}

input OrderUpdateInput {
  orderSimplexId: Float
  orderDateCreated: DateTime
  orderDateApproved: DateTime
  orderCreatedBy: String
  orderCreatedByEmail: String
  orderNewHire: Boolean
  orderRecipient: String
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String
  orderBusinessUnit: String
  orderAttention: String
  orderShippingAddress: String
  orderItem: String
  orderTotal: Float
  orderComments: String
  orderCategory: String
  orderSla: Int
  orderItam: ItamProgressUpdateOneWithoutItamOrderInput
  orderTech: TechProgressUpdateOneWithoutTechOrderInput
}

input OrderUpdateOneWithoutOrderItamInput {
  create: OrderCreateWithoutOrderItamInput
  connect: OrderWhereUniqueInput
  delete: Boolean
  update: OrderUpdateWithoutOrderItamDataInput
  upsert: OrderUpsertWithoutOrderItamInput
}

input OrderUpdateOneWithoutOrderTechInput {
  create: OrderCreateWithoutOrderTechInput
  connect: OrderWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: OrderUpdateWithoutOrderTechDataInput
  upsert: OrderUpsertWithoutOrderTechInput
}

input OrderUpdateWithoutOrderItamDataInput {
  orderSimplexId: Float
  orderDateCreated: DateTime
  orderDateApproved: DateTime
  orderCreatedBy: String
  orderCreatedByEmail: String
  orderNewHire: Boolean
  orderRecipient: String
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String
  orderBusinessUnit: String
  orderAttention: String
  orderShippingAddress: String
  orderItem: String
  orderTotal: Float
  orderComments: String
  orderCategory: String
  orderSla: Int
  orderTech: TechProgressUpdateOneWithoutTechOrderInput
}

input OrderUpdateWithoutOrderTechDataInput {
  orderSimplexId: Float
  orderDateCreated: DateTime
  orderDateApproved: DateTime
  orderCreatedBy: String
  orderCreatedByEmail: String
  orderNewHire: Boolean
  orderRecipient: String
  orderHireStartDate: DateTime
  orderHireName: String
  orderApprovalManager: String
  orderBusinessUnit: String
  orderAttention: String
  orderShippingAddress: String
  orderItem: String
  orderTotal: Float
  orderComments: String
  orderCategory: String
  orderSla: Int
  orderItam: ItamProgressUpdateOneWithoutItamOrderInput
}

input OrderUpsertWithoutOrderItamInput {
  update: OrderUpdateWithoutOrderItamDataInput!
  create: OrderCreateWithoutOrderItamInput!
}

input OrderUpsertWithoutOrderTechInput {
  update: OrderUpdateWithoutOrderTechDataInput!
  create: OrderCreateWithoutOrderTechInput!
}

input OrderWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderWhereInput!]

  """Logical OR on all given filters."""
  OR: [OrderWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  orderSimplexId: Float

  """All values that are not equal to given value."""
  orderSimplexId_not: Float

  """All values that are contained in given list."""
  orderSimplexId_in: [Float!]

  """All values that are not contained in given list."""
  orderSimplexId_not_in: [Float!]

  """All values less than the given value."""
  orderSimplexId_lt: Float

  """All values less than or equal the given value."""
  orderSimplexId_lte: Float

  """All values greater than the given value."""
  orderSimplexId_gt: Float

  """All values greater than or equal the given value."""
  orderSimplexId_gte: Float
  orderDateCreated: DateTime

  """All values that are not equal to given value."""
  orderDateCreated_not: DateTime

  """All values that are contained in given list."""
  orderDateCreated_in: [DateTime!]

  """All values that are not contained in given list."""
  orderDateCreated_not_in: [DateTime!]

  """All values less than the given value."""
  orderDateCreated_lt: DateTime

  """All values less than or equal the given value."""
  orderDateCreated_lte: DateTime

  """All values greater than the given value."""
  orderDateCreated_gt: DateTime

  """All values greater than or equal the given value."""
  orderDateCreated_gte: DateTime
  orderDateApproved: DateTime

  """All values that are not equal to given value."""
  orderDateApproved_not: DateTime

  """All values that are contained in given list."""
  orderDateApproved_in: [DateTime!]

  """All values that are not contained in given list."""
  orderDateApproved_not_in: [DateTime!]

  """All values less than the given value."""
  orderDateApproved_lt: DateTime

  """All values less than or equal the given value."""
  orderDateApproved_lte: DateTime

  """All values greater than the given value."""
  orderDateApproved_gt: DateTime

  """All values greater than or equal the given value."""
  orderDateApproved_gte: DateTime
  orderCreatedBy: String

  """All values that are not equal to given value."""
  orderCreatedBy_not: String

  """All values that are contained in given list."""
  orderCreatedBy_in: [String!]

  """All values that are not contained in given list."""
  orderCreatedBy_not_in: [String!]

  """All values less than the given value."""
  orderCreatedBy_lt: String

  """All values less than or equal the given value."""
  orderCreatedBy_lte: String

  """All values greater than the given value."""
  orderCreatedBy_gt: String

  """All values greater than or equal the given value."""
  orderCreatedBy_gte: String

  """All values containing the given string."""
  orderCreatedBy_contains: String

  """All values not containing the given string."""
  orderCreatedBy_not_contains: String

  """All values starting with the given string."""
  orderCreatedBy_starts_with: String

  """All values not starting with the given string."""
  orderCreatedBy_not_starts_with: String

  """All values ending with the given string."""
  orderCreatedBy_ends_with: String

  """All values not ending with the given string."""
  orderCreatedBy_not_ends_with: String
  orderCreatedByEmail: String

  """All values that are not equal to given value."""
  orderCreatedByEmail_not: String

  """All values that are contained in given list."""
  orderCreatedByEmail_in: [String!]

  """All values that are not contained in given list."""
  orderCreatedByEmail_not_in: [String!]

  """All values less than the given value."""
  orderCreatedByEmail_lt: String

  """All values less than or equal the given value."""
  orderCreatedByEmail_lte: String

  """All values greater than the given value."""
  orderCreatedByEmail_gt: String

  """All values greater than or equal the given value."""
  orderCreatedByEmail_gte: String

  """All values containing the given string."""
  orderCreatedByEmail_contains: String

  """All values not containing the given string."""
  orderCreatedByEmail_not_contains: String

  """All values starting with the given string."""
  orderCreatedByEmail_starts_with: String

  """All values not starting with the given string."""
  orderCreatedByEmail_not_starts_with: String

  """All values ending with the given string."""
  orderCreatedByEmail_ends_with: String

  """All values not ending with the given string."""
  orderCreatedByEmail_not_ends_with: String
  orderNewHire: Boolean

  """All values that are not equal to given value."""
  orderNewHire_not: Boolean
  orderRecipient: String

  """All values that are not equal to given value."""
  orderRecipient_not: String

  """All values that are contained in given list."""
  orderRecipient_in: [String!]

  """All values that are not contained in given list."""
  orderRecipient_not_in: [String!]

  """All values less than the given value."""
  orderRecipient_lt: String

  """All values less than or equal the given value."""
  orderRecipient_lte: String

  """All values greater than the given value."""
  orderRecipient_gt: String

  """All values greater than or equal the given value."""
  orderRecipient_gte: String

  """All values containing the given string."""
  orderRecipient_contains: String

  """All values not containing the given string."""
  orderRecipient_not_contains: String

  """All values starting with the given string."""
  orderRecipient_starts_with: String

  """All values not starting with the given string."""
  orderRecipient_not_starts_with: String

  """All values ending with the given string."""
  orderRecipient_ends_with: String

  """All values not ending with the given string."""
  orderRecipient_not_ends_with: String
  orderHireStartDate: DateTime

  """All values that are not equal to given value."""
  orderHireStartDate_not: DateTime

  """All values that are contained in given list."""
  orderHireStartDate_in: [DateTime!]

  """All values that are not contained in given list."""
  orderHireStartDate_not_in: [DateTime!]

  """All values less than the given value."""
  orderHireStartDate_lt: DateTime

  """All values less than or equal the given value."""
  orderHireStartDate_lte: DateTime

  """All values greater than the given value."""
  orderHireStartDate_gt: DateTime

  """All values greater than or equal the given value."""
  orderHireStartDate_gte: DateTime
  orderHireName: String

  """All values that are not equal to given value."""
  orderHireName_not: String

  """All values that are contained in given list."""
  orderHireName_in: [String!]

  """All values that are not contained in given list."""
  orderHireName_not_in: [String!]

  """All values less than the given value."""
  orderHireName_lt: String

  """All values less than or equal the given value."""
  orderHireName_lte: String

  """All values greater than the given value."""
  orderHireName_gt: String

  """All values greater than or equal the given value."""
  orderHireName_gte: String

  """All values containing the given string."""
  orderHireName_contains: String

  """All values not containing the given string."""
  orderHireName_not_contains: String

  """All values starting with the given string."""
  orderHireName_starts_with: String

  """All values not starting with the given string."""
  orderHireName_not_starts_with: String

  """All values ending with the given string."""
  orderHireName_ends_with: String

  """All values not ending with the given string."""
  orderHireName_not_ends_with: String
  orderApprovalManager: String

  """All values that are not equal to given value."""
  orderApprovalManager_not: String

  """All values that are contained in given list."""
  orderApprovalManager_in: [String!]

  """All values that are not contained in given list."""
  orderApprovalManager_not_in: [String!]

  """All values less than the given value."""
  orderApprovalManager_lt: String

  """All values less than or equal the given value."""
  orderApprovalManager_lte: String

  """All values greater than the given value."""
  orderApprovalManager_gt: String

  """All values greater than or equal the given value."""
  orderApprovalManager_gte: String

  """All values containing the given string."""
  orderApprovalManager_contains: String

  """All values not containing the given string."""
  orderApprovalManager_not_contains: String

  """All values starting with the given string."""
  orderApprovalManager_starts_with: String

  """All values not starting with the given string."""
  orderApprovalManager_not_starts_with: String

  """All values ending with the given string."""
  orderApprovalManager_ends_with: String

  """All values not ending with the given string."""
  orderApprovalManager_not_ends_with: String
  orderBusinessUnit: String

  """All values that are not equal to given value."""
  orderBusinessUnit_not: String

  """All values that are contained in given list."""
  orderBusinessUnit_in: [String!]

  """All values that are not contained in given list."""
  orderBusinessUnit_not_in: [String!]

  """All values less than the given value."""
  orderBusinessUnit_lt: String

  """All values less than or equal the given value."""
  orderBusinessUnit_lte: String

  """All values greater than the given value."""
  orderBusinessUnit_gt: String

  """All values greater than or equal the given value."""
  orderBusinessUnit_gte: String

  """All values containing the given string."""
  orderBusinessUnit_contains: String

  """All values not containing the given string."""
  orderBusinessUnit_not_contains: String

  """All values starting with the given string."""
  orderBusinessUnit_starts_with: String

  """All values not starting with the given string."""
  orderBusinessUnit_not_starts_with: String

  """All values ending with the given string."""
  orderBusinessUnit_ends_with: String

  """All values not ending with the given string."""
  orderBusinessUnit_not_ends_with: String
  orderAttention: String

  """All values that are not equal to given value."""
  orderAttention_not: String

  """All values that are contained in given list."""
  orderAttention_in: [String!]

  """All values that are not contained in given list."""
  orderAttention_not_in: [String!]

  """All values less than the given value."""
  orderAttention_lt: String

  """All values less than or equal the given value."""
  orderAttention_lte: String

  """All values greater than the given value."""
  orderAttention_gt: String

  """All values greater than or equal the given value."""
  orderAttention_gte: String

  """All values containing the given string."""
  orderAttention_contains: String

  """All values not containing the given string."""
  orderAttention_not_contains: String

  """All values starting with the given string."""
  orderAttention_starts_with: String

  """All values not starting with the given string."""
  orderAttention_not_starts_with: String

  """All values ending with the given string."""
  orderAttention_ends_with: String

  """All values not ending with the given string."""
  orderAttention_not_ends_with: String
  orderShippingAddress: String

  """All values that are not equal to given value."""
  orderShippingAddress_not: String

  """All values that are contained in given list."""
  orderShippingAddress_in: [String!]

  """All values that are not contained in given list."""
  orderShippingAddress_not_in: [String!]

  """All values less than the given value."""
  orderShippingAddress_lt: String

  """All values less than or equal the given value."""
  orderShippingAddress_lte: String

  """All values greater than the given value."""
  orderShippingAddress_gt: String

  """All values greater than or equal the given value."""
  orderShippingAddress_gte: String

  """All values containing the given string."""
  orderShippingAddress_contains: String

  """All values not containing the given string."""
  orderShippingAddress_not_contains: String

  """All values starting with the given string."""
  orderShippingAddress_starts_with: String

  """All values not starting with the given string."""
  orderShippingAddress_not_starts_with: String

  """All values ending with the given string."""
  orderShippingAddress_ends_with: String

  """All values not ending with the given string."""
  orderShippingAddress_not_ends_with: String
  orderItem: String

  """All values that are not equal to given value."""
  orderItem_not: String

  """All values that are contained in given list."""
  orderItem_in: [String!]

  """All values that are not contained in given list."""
  orderItem_not_in: [String!]

  """All values less than the given value."""
  orderItem_lt: String

  """All values less than or equal the given value."""
  orderItem_lte: String

  """All values greater than the given value."""
  orderItem_gt: String

  """All values greater than or equal the given value."""
  orderItem_gte: String

  """All values containing the given string."""
  orderItem_contains: String

  """All values not containing the given string."""
  orderItem_not_contains: String

  """All values starting with the given string."""
  orderItem_starts_with: String

  """All values not starting with the given string."""
  orderItem_not_starts_with: String

  """All values ending with the given string."""
  orderItem_ends_with: String

  """All values not ending with the given string."""
  orderItem_not_ends_with: String
  orderTotal: Float

  """All values that are not equal to given value."""
  orderTotal_not: Float

  """All values that are contained in given list."""
  orderTotal_in: [Float!]

  """All values that are not contained in given list."""
  orderTotal_not_in: [Float!]

  """All values less than the given value."""
  orderTotal_lt: Float

  """All values less than or equal the given value."""
  orderTotal_lte: Float

  """All values greater than the given value."""
  orderTotal_gt: Float

  """All values greater than or equal the given value."""
  orderTotal_gte: Float
  orderComments: String

  """All values that are not equal to given value."""
  orderComments_not: String

  """All values that are contained in given list."""
  orderComments_in: [String!]

  """All values that are not contained in given list."""
  orderComments_not_in: [String!]

  """All values less than the given value."""
  orderComments_lt: String

  """All values less than or equal the given value."""
  orderComments_lte: String

  """All values greater than the given value."""
  orderComments_gt: String

  """All values greater than or equal the given value."""
  orderComments_gte: String

  """All values containing the given string."""
  orderComments_contains: String

  """All values not containing the given string."""
  orderComments_not_contains: String

  """All values starting with the given string."""
  orderComments_starts_with: String

  """All values not starting with the given string."""
  orderComments_not_starts_with: String

  """All values ending with the given string."""
  orderComments_ends_with: String

  """All values not ending with the given string."""
  orderComments_not_ends_with: String
  orderCategory: String

  """All values that are not equal to given value."""
  orderCategory_not: String

  """All values that are contained in given list."""
  orderCategory_in: [String!]

  """All values that are not contained in given list."""
  orderCategory_not_in: [String!]

  """All values less than the given value."""
  orderCategory_lt: String

  """All values less than or equal the given value."""
  orderCategory_lte: String

  """All values greater than the given value."""
  orderCategory_gt: String

  """All values greater than or equal the given value."""
  orderCategory_gte: String

  """All values containing the given string."""
  orderCategory_contains: String

  """All values not containing the given string."""
  orderCategory_not_contains: String

  """All values starting with the given string."""
  orderCategory_starts_with: String

  """All values not starting with the given string."""
  orderCategory_not_starts_with: String

  """All values ending with the given string."""
  orderCategory_ends_with: String

  """All values not ending with the given string."""
  orderCategory_not_ends_with: String
  orderSla: Int

  """All values that are not equal to given value."""
  orderSla_not: Int

  """All values that are contained in given list."""
  orderSla_in: [Int!]

  """All values that are not contained in given list."""
  orderSla_not_in: [Int!]

  """All values less than the given value."""
  orderSla_lt: Int

  """All values less than or equal the given value."""
  orderSla_lte: Int

  """All values greater than the given value."""
  orderSla_gt: Int

  """All values greater than or equal the given value."""
  orderSla_gte: Int
  orderItam: ItamProgressWhereInput
  orderTech: TechProgressWhereInput
}

input OrderWhereUniqueInput {
  id: ID
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Order]!
  itamProgresses(where: ItamProgressWhereInput, orderBy: ItamProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ItamProgress]!
  techProgresses(where: TechProgressWhereInput, orderBy: TechProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TechProgress]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  order(where: OrderWhereUniqueInput!): Order
  itamProgress(where: ItamProgressWhereUniqueInput!): ItamProgress
  techProgress(where: TechProgressWhereUniqueInput!): TechProgress
  user(where: UserWhereUniqueInput!): User
  ordersConnection(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OrderConnection!
  itamProgressesConnection(where: ItamProgressWhereInput, orderBy: ItamProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ItamProgressConnection!
  techProgressesConnection(where: TechProgressWhereInput, orderBy: TechProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TechProgressConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  order(where: OrderSubscriptionWhereInput): OrderSubscriptionPayload
  itamProgress(where: ItamProgressSubscriptionWhereInput): ItamProgressSubscriptionPayload
  techProgress(where: TechProgressSubscriptionWhereInput): TechProgressSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type TechProgress implements Node {
  id: ID!
  techOrder(where: OrderWhereInput): Order
  techOwner(where: UserWhereInput): User!
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
}

"""A connection to a list of items."""
type TechProgressConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TechProgressEdge]!
  aggregate: AggregateTechProgress!
}

input TechProgressCreateInput {
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
  techOrder: OrderCreateOneWithoutOrderTechInput
  techOwner: UserCreateOneWithoutUserTechOrdersInput!
}

input TechProgressCreateManyWithoutTechOwnerInput {
  create: [TechProgressCreateWithoutTechOwnerInput!]
  connect: [TechProgressWhereUniqueInput!]
}

input TechProgressCreateOneWithoutTechOrderInput {
  create: TechProgressCreateWithoutTechOrderInput
  connect: TechProgressWhereUniqueInput
}

input TechProgressCreateWithoutTechOrderInput {
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
  techOwner: UserCreateOneWithoutUserTechOrdersInput!
}

input TechProgressCreateWithoutTechOwnerInput {
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
  techOrder: OrderCreateOneWithoutOrderTechInput
}

"""An edge in a connection."""
type TechProgressEdge {
  """The item at the end of the edge."""
  node: TechProgress!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TechProgressOrderByInput {
  id_ASC
  id_DESC
  techStatus_ASC
  techStatus_DESC
  techConfirmedUser_ASC
  techConfirmedUser_DESC
  techCostCenter_ASC
  techCostCenter_DESC
  techServiceTag_ASC
  techServiceTag_DESC
  techInitialEmail_ASC
  techInitialEmail_DESC
  techDateFollowupTemp_ASC
  techDateFollowupTemp_DESC
  techFollowupEmailSent_ASC
  techFollowupEmailSent_DESC
  techDateCompleted_ASC
  techDateCompleted_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type TechProgressPreviousValues {
  id: ID!
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
}

type TechProgressSubscriptionPayload {
  mutation: MutationType!
  node: TechProgress
  updatedFields: [String!]
  previousValues: TechProgressPreviousValues
}

input TechProgressSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TechProgressSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TechProgressSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TechProgressSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TechProgressWhereInput
}

input TechProgressUpdateInput {
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
  techOrder: OrderUpdateOneWithoutOrderTechInput
  techOwner: UserUpdateOneWithoutUserTechOrdersInput
}

input TechProgressUpdateManyWithoutTechOwnerInput {
  create: [TechProgressCreateWithoutTechOwnerInput!]
  connect: [TechProgressWhereUniqueInput!]
  disconnect: [TechProgressWhereUniqueInput!]
  delete: [TechProgressWhereUniqueInput!]
  update: [TechProgressUpdateWithWhereUniqueWithoutTechOwnerInput!]
  upsert: [TechProgressUpsertWithWhereUniqueWithoutTechOwnerInput!]
}

input TechProgressUpdateOneWithoutTechOrderInput {
  create: TechProgressCreateWithoutTechOrderInput
  connect: TechProgressWhereUniqueInput
  delete: Boolean
  update: TechProgressUpdateWithoutTechOrderDataInput
  upsert: TechProgressUpsertWithoutTechOrderInput
}

input TechProgressUpdateWithoutTechOrderDataInput {
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
  techOwner: UserUpdateOneWithoutUserTechOrdersInput
}

input TechProgressUpdateWithoutTechOwnerDataInput {
  techStatus: String
  techConfirmedUser: String
  techCostCenter: String
  techServiceTag: String
  techInitialEmail: DateTime
  techDateFollowupTemp: DateTime
  techFollowupEmailSent: DateTime
  techDateCompleted: DateTime
  techOrder: OrderUpdateOneWithoutOrderTechInput
}

input TechProgressUpdateWithWhereUniqueWithoutTechOwnerInput {
  where: TechProgressWhereUniqueInput!
  data: TechProgressUpdateWithoutTechOwnerDataInput!
}

input TechProgressUpsertWithoutTechOrderInput {
  update: TechProgressUpdateWithoutTechOrderDataInput!
  create: TechProgressCreateWithoutTechOrderInput!
}

input TechProgressUpsertWithWhereUniqueWithoutTechOwnerInput {
  where: TechProgressWhereUniqueInput!
  update: TechProgressUpdateWithoutTechOwnerDataInput!
  create: TechProgressCreateWithoutTechOwnerInput!
}

input TechProgressWhereInput {
  """Logical AND on all given filters."""
  AND: [TechProgressWhereInput!]

  """Logical OR on all given filters."""
  OR: [TechProgressWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TechProgressWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  techStatus: String

  """All values that are not equal to given value."""
  techStatus_not: String

  """All values that are contained in given list."""
  techStatus_in: [String!]

  """All values that are not contained in given list."""
  techStatus_not_in: [String!]

  """All values less than the given value."""
  techStatus_lt: String

  """All values less than or equal the given value."""
  techStatus_lte: String

  """All values greater than the given value."""
  techStatus_gt: String

  """All values greater than or equal the given value."""
  techStatus_gte: String

  """All values containing the given string."""
  techStatus_contains: String

  """All values not containing the given string."""
  techStatus_not_contains: String

  """All values starting with the given string."""
  techStatus_starts_with: String

  """All values not starting with the given string."""
  techStatus_not_starts_with: String

  """All values ending with the given string."""
  techStatus_ends_with: String

  """All values not ending with the given string."""
  techStatus_not_ends_with: String
  techConfirmedUser: String

  """All values that are not equal to given value."""
  techConfirmedUser_not: String

  """All values that are contained in given list."""
  techConfirmedUser_in: [String!]

  """All values that are not contained in given list."""
  techConfirmedUser_not_in: [String!]

  """All values less than the given value."""
  techConfirmedUser_lt: String

  """All values less than or equal the given value."""
  techConfirmedUser_lte: String

  """All values greater than the given value."""
  techConfirmedUser_gt: String

  """All values greater than or equal the given value."""
  techConfirmedUser_gte: String

  """All values containing the given string."""
  techConfirmedUser_contains: String

  """All values not containing the given string."""
  techConfirmedUser_not_contains: String

  """All values starting with the given string."""
  techConfirmedUser_starts_with: String

  """All values not starting with the given string."""
  techConfirmedUser_not_starts_with: String

  """All values ending with the given string."""
  techConfirmedUser_ends_with: String

  """All values not ending with the given string."""
  techConfirmedUser_not_ends_with: String
  techCostCenter: String

  """All values that are not equal to given value."""
  techCostCenter_not: String

  """All values that are contained in given list."""
  techCostCenter_in: [String!]

  """All values that are not contained in given list."""
  techCostCenter_not_in: [String!]

  """All values less than the given value."""
  techCostCenter_lt: String

  """All values less than or equal the given value."""
  techCostCenter_lte: String

  """All values greater than the given value."""
  techCostCenter_gt: String

  """All values greater than or equal the given value."""
  techCostCenter_gte: String

  """All values containing the given string."""
  techCostCenter_contains: String

  """All values not containing the given string."""
  techCostCenter_not_contains: String

  """All values starting with the given string."""
  techCostCenter_starts_with: String

  """All values not starting with the given string."""
  techCostCenter_not_starts_with: String

  """All values ending with the given string."""
  techCostCenter_ends_with: String

  """All values not ending with the given string."""
  techCostCenter_not_ends_with: String
  techServiceTag: String

  """All values that are not equal to given value."""
  techServiceTag_not: String

  """All values that are contained in given list."""
  techServiceTag_in: [String!]

  """All values that are not contained in given list."""
  techServiceTag_not_in: [String!]

  """All values less than the given value."""
  techServiceTag_lt: String

  """All values less than or equal the given value."""
  techServiceTag_lte: String

  """All values greater than the given value."""
  techServiceTag_gt: String

  """All values greater than or equal the given value."""
  techServiceTag_gte: String

  """All values containing the given string."""
  techServiceTag_contains: String

  """All values not containing the given string."""
  techServiceTag_not_contains: String

  """All values starting with the given string."""
  techServiceTag_starts_with: String

  """All values not starting with the given string."""
  techServiceTag_not_starts_with: String

  """All values ending with the given string."""
  techServiceTag_ends_with: String

  """All values not ending with the given string."""
  techServiceTag_not_ends_with: String
  techInitialEmail: DateTime

  """All values that are not equal to given value."""
  techInitialEmail_not: DateTime

  """All values that are contained in given list."""
  techInitialEmail_in: [DateTime!]

  """All values that are not contained in given list."""
  techInitialEmail_not_in: [DateTime!]

  """All values less than the given value."""
  techInitialEmail_lt: DateTime

  """All values less than or equal the given value."""
  techInitialEmail_lte: DateTime

  """All values greater than the given value."""
  techInitialEmail_gt: DateTime

  """All values greater than or equal the given value."""
  techInitialEmail_gte: DateTime
  techDateFollowupTemp: DateTime

  """All values that are not equal to given value."""
  techDateFollowupTemp_not: DateTime

  """All values that are contained in given list."""
  techDateFollowupTemp_in: [DateTime!]

  """All values that are not contained in given list."""
  techDateFollowupTemp_not_in: [DateTime!]

  """All values less than the given value."""
  techDateFollowupTemp_lt: DateTime

  """All values less than or equal the given value."""
  techDateFollowupTemp_lte: DateTime

  """All values greater than the given value."""
  techDateFollowupTemp_gt: DateTime

  """All values greater than or equal the given value."""
  techDateFollowupTemp_gte: DateTime
  techFollowupEmailSent: DateTime

  """All values that are not equal to given value."""
  techFollowupEmailSent_not: DateTime

  """All values that are contained in given list."""
  techFollowupEmailSent_in: [DateTime!]

  """All values that are not contained in given list."""
  techFollowupEmailSent_not_in: [DateTime!]

  """All values less than the given value."""
  techFollowupEmailSent_lt: DateTime

  """All values less than or equal the given value."""
  techFollowupEmailSent_lte: DateTime

  """All values greater than the given value."""
  techFollowupEmailSent_gt: DateTime

  """All values greater than or equal the given value."""
  techFollowupEmailSent_gte: DateTime
  techDateCompleted: DateTime

  """All values that are not equal to given value."""
  techDateCompleted_not: DateTime

  """All values that are contained in given list."""
  techDateCompleted_in: [DateTime!]

  """All values that are not contained in given list."""
  techDateCompleted_not_in: [DateTime!]

  """All values less than the given value."""
  techDateCompleted_lt: DateTime

  """All values less than or equal the given value."""
  techDateCompleted_lte: DateTime

  """All values greater than the given value."""
  techDateCompleted_gt: DateTime

  """All values greater than or equal the given value."""
  techDateCompleted_gte: DateTime
  techOrder: OrderWhereInput
  techOwner: UserWhereInput
}

input TechProgressWhereUniqueInput {
  id: ID
}

type User implements Node {
  id: ID!
  userName: String!
  userItamOrders(where: ItamProgressWhereInput, orderBy: ItamProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ItamProgress!]
  userTechOrders(where: TechProgressWhereInput, orderBy: TechProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TechProgress!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  userName: String!
  userItamOrders: ItamProgressCreateManyWithoutItamOwnerInput
  userTechOrders: TechProgressCreateManyWithoutTechOwnerInput
}

input UserCreateOneWithoutUserItamOrdersInput {
  create: UserCreateWithoutUserItamOrdersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutUserTechOrdersInput {
  create: UserCreateWithoutUserTechOrdersInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutUserItamOrdersInput {
  userName: String!
  userTechOrders: TechProgressCreateManyWithoutTechOwnerInput
}

input UserCreateWithoutUserTechOrdersInput {
  userName: String!
  userItamOrders: ItamProgressCreateManyWithoutItamOwnerInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  userName_ASC
  userName_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  userName: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  userName: String
  userItamOrders: ItamProgressUpdateManyWithoutItamOwnerInput
  userTechOrders: TechProgressUpdateManyWithoutTechOwnerInput
}

input UserUpdateOneWithoutUserItamOrdersInput {
  create: UserCreateWithoutUserItamOrdersInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutUserItamOrdersDataInput
  upsert: UserUpsertWithoutUserItamOrdersInput
}

input UserUpdateOneWithoutUserTechOrdersInput {
  create: UserCreateWithoutUserTechOrdersInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutUserTechOrdersDataInput
  upsert: UserUpsertWithoutUserTechOrdersInput
}

input UserUpdateWithoutUserItamOrdersDataInput {
  userName: String
  userTechOrders: TechProgressUpdateManyWithoutTechOwnerInput
}

input UserUpdateWithoutUserTechOrdersDataInput {
  userName: String
  userItamOrders: ItamProgressUpdateManyWithoutItamOwnerInput
}

input UserUpsertWithoutUserItamOrdersInput {
  update: UserUpdateWithoutUserItamOrdersDataInput!
  create: UserCreateWithoutUserItamOrdersInput!
}

input UserUpsertWithoutUserTechOrdersInput {
  update: UserUpdateWithoutUserTechOrdersDataInput!
  create: UserCreateWithoutUserTechOrdersInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  userName: String

  """All values that are not equal to given value."""
  userName_not: String

  """All values that are contained in given list."""
  userName_in: [String!]

  """All values that are not contained in given list."""
  userName_not_in: [String!]

  """All values less than the given value."""
  userName_lt: String

  """All values less than or equal the given value."""
  userName_lte: String

  """All values greater than the given value."""
  userName_gt: String

  """All values greater than or equal the given value."""
  userName_gte: String

  """All values containing the given string."""
  userName_contains: String

  """All values not containing the given string."""
  userName_not_contains: String

  """All values starting with the given string."""
  userName_starts_with: String

  """All values not starting with the given string."""
  userName_not_starts_with: String

  """All values ending with the given string."""
  userName_ends_with: String

  """All values not ending with the given string."""
  userName_not_ends_with: String
  userItamOrders_every: ItamProgressWhereInput
  userItamOrders_some: ItamProgressWhereInput
  userItamOrders_none: ItamProgressWhereInput
  userTechOrders_every: TechProgressWhereInput
  userTechOrders_some: TechProgressWhereInput
  userTechOrders_none: TechProgressWhereInput
}

input UserWhereUniqueInput {
  id: ID
  userName: String
}
