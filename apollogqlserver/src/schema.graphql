# import Order from "./generated/prisma.graphql"
# import ItamProgress from "./generated/prisma.graphql"
# import TechProgress from "./generated/prisma.graphql"
# import User from "./generated/prisma.graphql"

input updateEntireOrderInput {
  orderId: ID!,
  orderSimplexId: Float!,
  orderDateCreated: DateTime!,
  orderDateApproved: DateTime!,
  orderCreatedBy: String!,
  orderCreatedByEmail: String!,
  orderNewHire: Boolean,
  orderRecipient: String!,
  orderHireStartDate: DateTime,
  orderHireName: String,
  orderApprovalManager: String!,
  orderBusinessUnit: String!,
  orderAttention: String!,
  orderShippingAddress: String!,
  orderItem: String!,
  orderTotal: Float!,
  orderComments: String!,
  orderCategory: String!,
  orderSla: Int,
  itamId: ID!,
  itamStatus: String,
  itamVerificationEmailSent: DateTime,
  itamProductSource: String,
  itamOldAssetTag: String,
  itamOldModel: String,
  itamMonitorModel: String,
  itamMonitorNum: Float,
  itamConnectorTypes: String,
  itamOrderPendingEmail: DateTime,
  itamConfirmedNewHire: DateTime,
  itamPoOrderId: Float,
  itamDellOrderId: Float,
  itamDellEmailNotif: DateTime,
  techId: ID!,
  techStatus: String,
  techConfirmedUser: String,
  techCostCenter: String,
  techServiceTag: String,
  techInitialEmail: DateTime,
  techDateFollowupTemp: DateTime,
  techFollowupEmailSent: DateTime,
  techDateCompleted: DateTime,
  itamUserName: String,
  techUserName: String
}

input createOrderInput{
  id: ID,
  orderSimplexId: Float!,
  orderDateCreated: DateTime!,
  orderDateApproved: DateTime!,
  orderCreatedBy: String!,
  orderCreatedByEmail: String!,
  orderNewHire: Boolean,
  orderRecipient: String!,
  orderHireStartDate: DateTime,
  orderHireName: String,
  orderApprovalManager: String!,
  orderBusinessUnit: String!,
  orderAttention: String!,
  orderShippingAddress: String!,
  orderItem: String!,
  orderTotal: Float!,
  orderComments: String!,
  orderCategory: String!,
  orderSla: Int,
  orderItam: ItamProgressCreateOneWithoutItamOrderInput,
  orderTech: TechProgressCreateOneWithoutTechOrderInput
}

input nextOrdersInput{
  orderCategory: String!,
  before: ID
}

type updateEntireOrderResponse{
  order: Order!,
  itam: ItamProgress!,
  tech: TechProgress!,
  user: User!
}

type Query{
  orders: [Order!]!
  filteredOrders(orderCategory: String!): [Order!]!
  users: [User!]!
  filteredUsers(userName: String!): [User!]!
  order(id: ID!): Order
  nextOrders(input: nextOrdersInput!): [Order!]!
}

type Mutation{
  createOrder( input: createOrderInput! ): Order
  createUser( userName: String! ): User
  deleteOrder( id: ID! ): Order
  deleteUser( id: ID! ): User
  updateUser( id: ID!, userName: String! ): User
  updateCategory( id: ID!, orderCategory: String! ): Order
  updateEntireOrder( input: updateEntireOrderInput! ): Order
}
